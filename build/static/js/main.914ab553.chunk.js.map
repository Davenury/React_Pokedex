{"version":3,"sources":["PokemonTypeComponent.js","ProgressBar.js","StatComponent.js","PokemonComponent.js","PokemonListComponent.js","App.js","reportWebVitals.js","index.js"],"names":["getColorByPokemonType","pokemonType","toLowerCase","PokemonTypeComponent","divStyle","backgroundColor","props","type","style","this","className","React","Component","ProgressBar","bgcolor","completed","fillerStyles","borderRadius","padding","width","color","splitStat","string","includes","split","join","StatComponent","getColorByStat","stat","name","charAt","toUpperCase","slice","value","base","P","require","Pokedex","capitalizeFirstLetter","Pokemon","apiResult","_apiResult","_name","_image","sprites","front_default","_stats","stats","types","map","push","idx","Box","mr","display","base_stat","PokemonComponent","state","pokemon","isFlipped","handleClick","bind","mounted","setPokemon","getPokemonByName","then","response","setState","catch","undefined","prevState","swal","onError","CircularProgress","infinite","onClick","Card","CardMedia","image","CardContent","Typography","variant","Divider","mt","remove","array","element","index","indexOf","splice","PokemonListComponent","pokemons","handleError","pokemonName","elements","App","document","getElementById","unshift","AppBar","position","src","alt","id","placeholder","Button","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.914ab553.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction getColorByPokemonType(pokemonType) {\r\n    pokemonType = pokemonType.toLowerCase();\r\n    switch(pokemonType){\r\n        case \"normal\": return \"#a8a878\"\r\n        case \"fire\": return \"#f08030\"\r\n        case \"water\": return \"#6890f0\"\r\n        case \"grass\": return \"#78c850\"\r\n        case \"electric\": return \"#f8d030\"\r\n        case \"ice\": return \"#98d8d8\"\r\n        case \"ground\": return \"#e0c068\"\r\n        case \"flying\": return \"#a890f0\"\r\n        case \"poison\": return \"#a040a0\"\r\n        case \"fighting\": return \"#c03028\"\r\n        case \"psychic\": return \"#f85888\"\r\n        case \"dark\": return \"#705848\"\r\n        case \"rock\": return \"#b8a038\"\r\n        case  \"bug\": return \"#a8b820\"\r\n        case \"ghost\": return \"#705898\"\r\n        case \"steel\": return \"#b8b8d0\"\r\n        case \"dragon\": return \"#7038F8\"\r\n        case \"fairy\": return \"#ffaec9\"\r\n        default: return \"#f0f0f0\"\r\n    }\r\n}\r\n\r\nexport class PokemonTypeComponent extends React.Component{\r\n\r\n    divStyle = {\r\n        backgroundColor: getColorByPokemonType(this.props.type)\r\n    }\r\n\r\n    render(){\r\n        return <div style={this.divStyle} className=\"PokemonType\">{this.props.type}</div>\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst ProgressBar = (props) => {\r\n    const { bgcolor, completed } = props;\r\n\r\n    const containerStyles = {\r\n        borderRadius: \"10px\",\r\n        backgroundColor: \"#e0e0de\",\r\n    }\r\n\r\n    const fillerStyles = {\r\n        borderRadius: \"10px\",\r\n        padding: 2,\r\n        width: `${completed}%`,\r\n        backgroundColor: bgcolor,\r\n    }\r\n\r\n    const labelStyles = {\r\n        padding: 5,\r\n        color: 'white'\r\n    }\r\n\r\n    return (\r\n        <div style={containerStyles}>\r\n            <div style={fillerStyles}>\r\n                <span style={labelStyles}>{`${completed}`}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;","import React from 'react';\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst MIN = 0\r\nconst MAX = 100\r\n\r\nconst normalise = value => (value - MIN) * 100 / (MAX - MIN);\r\n\r\nconst capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nconst splitStat = (string) => {\r\n    if(string.includes('-')){\r\n        let array = string.split('-')\r\n        return array.join(' ')\r\n    }\r\n    return string;\r\n}\r\n\r\nexport class StatComponent extends React.Component{\r\n\r\n    getColorByStat = stat => {\r\n        switch(stat){\r\n            case 'hp': return '#ff0000';\r\n            case 'attack': return '#F08030';\r\n            case 'defense': return '#F8D030';\r\n            case 'special-attack': return '#6890F0';\r\n            case 'special-defense': return '#78C850';\r\n            case 'speed': return '#F85888';\r\n            default: return '#ffffff';\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {splitStat(capitalizeFirstLetter(this.props.name))}\r\n                <ProgressBar bgcolor={this.getColorByStat(this.props.name)} completed={normalise(this.props.base)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport swal from 'sweetalert';\r\nimport {PokemonTypeComponent} from \"./PokemonTypeComponent\";\r\nimport Box from '@material-ui/core/Box';\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport {StatComponent} from \"./StatComponent\";\r\n\r\nconst Pokedex = require(\"pokeapi-js-wrapper\");\r\nconst P = new Pokedex.Pokedex();\r\n\r\n\r\nconst capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\n\r\nclass Pokemon{\r\n    constructor(apiResult) {\r\n        this._apiResult = apiResult\r\n        this._name = apiResult.name;\r\n        this._image = apiResult.sprites.front_default;\r\n        this._stats = apiResult.stats\r\n    }\r\n\r\n    get name(){\r\n        return capitalizeFirstLetter(this._name);\r\n    }\r\n\r\n    get image(){\r\n        return this._image;\r\n    }\r\n\r\n    get types(){\r\n        let types = []\r\n        this._apiResult.types\r\n            .map(type => types.push(type.type.name))\r\n        types = types.map(type => capitalizeFirstLetter(type))\r\n        types = types.map((type, idx) => <Box mr={1} display=\"inline\"><PokemonTypeComponent type={type} key={idx} /></Box>)\r\n        return types;\r\n    }\r\n\r\n    get stats(){\r\n        return this._stats\r\n            .map((stat, idx) => <StatComponent name={stat.stat.name} base={stat.base_stat} key={idx}/>)\r\n    }\r\n}\r\n\r\nexport class PokemonComponent extends React.Component {\r\n\r\n    state = {\r\n        pokemon: null,\r\n        isFlipped: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.setPokemon(this.props.name);\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    setPokemon(name) {\r\n        this.name = name\r\n        P.getPokemonByName(name)\r\n            .then((response) => {\r\n                if (this.mounted) {\r\n                    this.setState({pokemon: new Pokemon(response)})\r\n                }\r\n            })\r\n            .catch(() => {\r\n                this.setState({pokemon: undefined})\r\n            })\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState(prevState =>({ isFlipped: !prevState.isFlipped }))\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.pokemon === undefined) {\r\n            swal(\"Looks like we didn't catch this Pokemon either!\",\r\n                \"Maybe you've misspelled it's name?\", \"error\")\r\n            this.state.pokemon = null\r\n            this.props.onError(this.name)\r\n            return <div></div>;\r\n        }\r\n        if (this.state.pokemon === null) {\r\n            return <CircularProgress/>\r\n        } else {\r\n                return (\r\n                    <ReactCardFlip\r\n                        isFlipped={this.state.isFlipped}\r\n                        infinite=\"true\">\r\n                            <div onClick={this.handleClick}>\r\n                                <Card className=\"PokemonCard\"\r\n                                      key={this.state.pokemon.name}>\r\n                                    <CardMedia\r\n                                        className=\"PokemonImage\"\r\n                                        image={this.state.pokemon.image}/>\r\n                                    <CardContent>\r\n                                        <Typography variant={\"h5\"}>\r\n                                            {this.state.pokemon.name}\r\n                                        </Typography>\r\n                                        <Divider/>\r\n                                        <Box mt={2}>\r\n                                            {this.state.pokemon.types}\r\n                                        </Box>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </div>\r\n\r\n                            <div onClick={this.handleClick}>\r\n                                <Card className=\"PokemonCard\">\r\n                                    <CardContent>\r\n                                        <Typography variant={\"h5\"}>\r\n                                            {this.state.pokemon.name}\r\n                                        </Typography>\r\n                                        <Divider/>\r\n                                        {this.state.pokemon.stats}\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </div>\r\n                    </ReactCardFlip>\r\n                );\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport {PokemonComponent} from \"./PokemonComponent\";\r\n\r\nfunction remove(array, element){\r\n    const index = array.indexOf(element)\r\n    if(index !== -1)\r\n        array.splice(index, 1)\r\n}\r\n\r\nexport class PokemonListComponent extends React.Component{\r\n\r\n    pokemons = this.props.pokemons\r\n\r\n    handleError = (pokemonName) => {\r\n        remove(this.pokemons, pokemonName)\r\n        this.props.onError()\r\n    }\r\n\r\n    render() {\r\n        let elements = this.pokemons\r\n            .map(pokemonName => {\r\n                return <PokemonComponent\r\n                    name={pokemonName}\r\n                    key={pokemonName}\r\n                onError={this.handleError}/>\r\n            })\r\n        return <div className=\"PokemonList\">{elements}</div>\r\n    }\r\n}","import React from 'react'\nimport './App.css';\nimport {PokemonListComponent} from \"./PokemonListComponent\";\nimport {AppBar, Button} from \"@material-ui/core\";\n\nfunction remove(array, element){\n    const index = array.indexOf(element)\n    if(index !== -1)\n        array.splice(index, 1)\n}\n\nexport class App extends React.Component{\n\n    state = {\n        pokemons : []\n    }\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleError = this.handleError.bind(this);\n    }\n\n    handleClick () {\n        let pokemonName = document.getElementById(\"NewPokemonName\").value.toLowerCase();\n        this.state.pokemons.unshift(pokemonName);\n        this.setState(\n            { pokemons: this.state.pokemons}\n        )\n        document.getElementById(\"NewPokemonName\").value = \"\";\n    };\n\n    handleError(pokemonName){\n        remove(this.state.pokemons, pokemonName)\n        this.setState({pokemons: this.state.pokemons})\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <AppBar position=\"static\">\n                    <img\n                        className=\"Logo\"\n                        src=\"https://i.imgur.com/3uepDa1.png\"\n                        alt=\"PokemonLogo\"/>\n                </AppBar>\n                <input\n                    id=\"NewPokemonName\"\n                    placeholder=\"Enter Pokemon Name\"\n                    type=\"text\"\n                    className=\"PokemonInput\"/>\n                <div className=\"center\">\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        onClick={this.handleClick}>Add Pokemon</Button>\n                </div>\n                <PokemonListComponent\n                    pokemons={this.state.pokemons}\n                    onError={this.handleError}\n                />\n            </div>\n        );\n    }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}