[{"D:\\Informatyka\\ReactProjects\\pokedex\\src\\index.js":"1","D:\\Informatyka\\ReactProjects\\pokedex\\src\\App.js":"2","D:\\Informatyka\\ReactProjects\\pokedex\\src\\reportWebVitals.js":"3","D:\\Informatyka\\ReactProjects\\pokedex\\src\\PokemonListComponent.js":"4","D:\\Informatyka\\ReactProjects\\pokedex\\src\\PokemonComponent.js":"5","D:\\Informatyka\\ReactProjects\\pokedex\\src\\PokemonTypeComponent.js":"6","D:\\Informatyka\\ReactProjects\\pokedex\\src\\StatComponent.js":"7","D:\\Informatyka\\ReactProjects\\pokedex\\src\\ProgressBar.js":"8"},{"size":504,"mtime":1609356248234,"results":"9","hashOfConfig":"10"},{"size":1969,"mtime":1609507360447,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":781,"mtime":1609419637017,"results":"13","hashOfConfig":"10"},{"size":4825,"mtime":1609506587394,"results":"14","hashOfConfig":"10"},{"size":1190,"mtime":1609418822327,"results":"15","hashOfConfig":"10"},{"size":1189,"mtime":1609506769678,"results":"16","hashOfConfig":"10"},{"size":692,"mtime":1609506495108,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1hddcww",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Informatyka\\ReactProjects\\pokedex\\src\\index.js",[],["36","37"],"D:\\Informatyka\\ReactProjects\\pokedex\\src\\App.js",[],"D:\\Informatyka\\ReactProjects\\pokedex\\src\\reportWebVitals.js",[],"D:\\Informatyka\\ReactProjects\\pokedex\\src\\PokemonListComponent.js",[],"D:\\Informatyka\\ReactProjects\\pokedex\\src\\PokemonComponent.js",["38"],"import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport swal from 'sweetalert';\r\nimport {PokemonTypeComponent} from \"./PokemonTypeComponent\";\r\nimport Box from '@material-ui/core/Box';\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport {StatComponent} from \"./StatComponent\";\r\n\r\nconst Pokedex = require(\"pokeapi-js-wrapper\");\r\nconst P = new Pokedex.Pokedex();\r\n\r\n\r\nconst capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\n\r\nclass Pokemon{\r\n    constructor(apiResult) {\r\n        this._apiResult = apiResult\r\n        this._name = apiResult.name;\r\n        this._image = apiResult.sprites.front_default;\r\n        this._stats = apiResult.stats\r\n    }\r\n\r\n    get name(){\r\n        return capitalizeFirstLetter(this._name);\r\n    }\r\n\r\n    get image(){\r\n        return this._image;\r\n    }\r\n\r\n    get types(){\r\n        let types = []\r\n        this._apiResult.types\r\n            .map(type => types.push(type.type.name))\r\n        types = types.map(type => capitalizeFirstLetter(type))\r\n        types = types.map((type, idx) => <Box mr={1} display=\"inline\"><PokemonTypeComponent type={type} key={idx} /></Box>)\r\n        return types;\r\n    }\r\n\r\n    get stats(){\r\n        return this._stats\r\n            .map((stat, idx) => <StatComponent name={stat.stat.name} base={stat.base_stat} key={idx}/>)\r\n    }\r\n}\r\n\r\nexport class PokemonComponent extends React.Component {\r\n\r\n    state = {\r\n        pokemon: null,\r\n        isFlipped: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.setPokemon(this.props.name);\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    setPokemon(name) {\r\n        this.name = name\r\n        P.getPokemonByName(name)\r\n            .then((response) => {\r\n                if (this.mounted) {\r\n                    this.setState({pokemon: new Pokemon(response)})\r\n                }\r\n            })\r\n            .catch(() => {\r\n                this.setState({pokemon: undefined})\r\n            })\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState(prevState =>({ isFlipped: !prevState.isFlipped }))\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.pokemon === undefined) {\r\n            swal(\"Looks like we didn't catch this Pokemon either!\",\r\n                \"Maybe you've misspelled it's name?\", \"error\")\r\n            this.state.pokemon = null\r\n            this.props.onError(this.name)\r\n            return <div></div>;\r\n        }\r\n        if (this.state.pokemon === null) {\r\n            return <CircularProgress/>\r\n        } else {\r\n                return (\r\n                    <ReactCardFlip\r\n                        isFlipped={this.state.isFlipped}\r\n                        infinite=\"true\">\r\n                            <div onClick={this.handleClick}>\r\n                                <Card className=\"PokemonCard\"\r\n                                      key={this.state.pokemon.name}>\r\n                                    <CardMedia\r\n                                        className=\"PokemonImage\"\r\n                                        image={this.state.pokemon.image}/>\r\n                                    <CardContent>\r\n                                        <Typography variant={\"h5\"}>\r\n                                            {this.state.pokemon.name}\r\n                                        </Typography>\r\n                                        <Divider/>\r\n                                        <Box mt={2}>\r\n                                            {this.state.pokemon.types}\r\n                                        </Box>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </div>\r\n\r\n                            <div onClick={this.handleClick}>\r\n                                <Card className=\"PokemonCard\">\r\n                                    <CardContent>\r\n                                        <Typography variant={\"h5\"}>\r\n                                            {this.state.pokemon.name}\r\n                                        </Typography>\r\n                                        <Divider/>\r\n                                        {this.state.pokemon.stats}\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </div>\r\n                    </ReactCardFlip>\r\n                );\r\n        }\r\n    }\r\n}","D:\\Informatyka\\ReactProjects\\pokedex\\src\\PokemonTypeComponent.js",[],"D:\\Informatyka\\ReactProjects\\pokedex\\src\\StatComponent.js",[],"D:\\Informatyka\\ReactProjects\\pokedex\\src\\ProgressBar.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":98,"column":13,"nodeType":"45","endLine":98,"endColumn":23},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]